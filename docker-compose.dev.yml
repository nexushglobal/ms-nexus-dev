services:
  nats:
    image: nats:2.10-alpine
    container_name: nexus-nats
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command:
      ["--js", "--sd", "/data", "--http_port", "8222", "--name", "nexus-nats"]
    volumes:
      - nats_data:/data
    networks:
      - nexus-network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: nexus-mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: nexus_users
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - nexus-network
    command: mongod --auth

  nexus-gateway:
    build:
      context: ./ms-nexus-gateway
      dockerfile: Dockerfile.dev
      target: development
    container_name: nexus-gateway
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - NATS_SERVERS=nats://nats:4222
      - PORT=8000
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-gateway/src:/app/src:cached
      - ./ms-nexus-gateway/package.json:/app/package.json:cached
      - ./ms-nexus-gateway/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-gateway/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules
      - /app/node_modules
    depends_on:
      - nats
      - ms-users
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped

  # Microservicio de Usuarios
  ms-users:
    build:
      context: ./ms-nexus-user
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - NODE_ENV=development
      - NATS_SERVERS=nats://nats:4222
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/nexus_users?authSource=admin
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-user/src:/app/src:cached
      - ./ms-nexus-user/package.json:/app/package.json:cached
      - ./ms-nexus-user/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-user/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - nats
      - mongodb
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped

  # Microservicio de Integración
  ms-integration:
    build:
      context: ./ms-nexus-integration
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats:4222
      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      # Email Configuration
      - AWS_SES_SMTP_USERNAME=${AWS_SES_SMTP_USERNAME}
      - AWS_SES_SMTP_PASSWORD=${AWS_SES_SMTP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      # API Tokens
      - PA_TOKEN_PERUAPIS=${PA_TOKEN_PERUAPIS}
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-integration/src:/app/src:cached
      - ./ms-nexus-integration/package.json:/app/package.json:cached
      - ./ms-nexus-integration/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-integration/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - nats
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped

  # Microservicio de Auth
  ms-auth:
    build:
      context: ./ms-nexus-auth
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3003
      - NATS_SERVERS=nats://nats:4222
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}

    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-auth/src:/app/src:cached
      - ./ms-nexus-auth/package.json:/app/package.json:cached
      - ./ms-nexus-auth/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-auth/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - nats
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped

  ms-payment:
    build:
      context: ./ms-nexus-payment
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3004
      - NATS_SERVERS=nats://nats:4222
      # Stripe Configuration
      - PAYMENTS_DATABASE_URL=postgres://admin:password@pg-payments:5432/payments_db
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-payment/src:/app/src:cached
      - ./ms-nexus-payment/package.json:/app/package.json:cached
      - ./ms-nexus-payment/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-payment/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - pg-payments
      - nats
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped
  pg-payments:
    image: postgres:17
    container_name: nexus-payments-db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: payments_db
    volumes:
      - payments_data:/var/lib/postgresql/data
    networks:
      - nexus-network

  ms-membership:
    build:
      context: ./ms-nexus-membership
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3005
      - NATS_SERVERS=nats://nats:4222
      - MEMBERSHIP_DATABASE_URL=postgres://admin:password@pg-membership:5432/membership_db
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-membership/src:/app/src:cached
      - ./ms-nexus-membership/package.json:/app/package.json:cached
      - ./ms-nexus-membership/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-membership/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - nats
      - pg-membership
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped
  pg-membership:
    image: postgres:17
    container_name: nexus-membership-db
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: membership_db
    volumes:
      - membership_data:/var/lib/postgresql/data
    networks:
      - nexus-network
  ms-point:
    build:
      context: ./ms-nexus-point
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3006
      - NATS_SERVERS=nats://nats:4222
      - POINT_DATABASE_URL=postgres://admin:password@pg-point:5432/point_db
    volumes:
      # Montar código fuente para hot reload
      - ./ms-nexus-point/src:/app/src:cached
      - ./ms-nexus-point/package.json:/app/package.json:cached
      - ./ms-nexus-point/tsconfig.json:/app/tsconfig.json:cached
      - ./ms-nexus-point/nest-cli.json:/app/nest-cli.json:cached
      # Excluir node_modules para evitar conflictos
      - /app/node_modules
    depends_on:
      - nats
      - pg-point
    networks:
      - nexus-network
    command: ["pnpm", "run", "start:dev"]
    restart: unless-stopped
  pg-point:
    image: postgres:17
    container_name: nexus-point-db
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: point_db
    volumes:
      - point_data:/var/lib/postgresql/data
    networks:
      - nexus-network
volumes:
  nats_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  payments_data:
    driver: local
  membership_data:
    driver: local
  point_data:
    driver: local

networks:
  nexus-network:
    driver: bridge
    name: nexus-microservices

services:
  # NATS Server
  nats-server:
    image: nats:2.10-alpine
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command:
      [
        "--cluster_name",
        "NATS",
        "--cluster",
        "nats://0.0.0.0:6222",
        "--routes",
        "nats://ruser:T0pS3cr3t@nats-server:6222",
        "--http_port",
        "8222",
      ]
    networks:
      - microservices-network

  # Gateway (si existe)
  gateway:
    build:
      context: C:\\Users\\antho\\microservices\\ms-nexus-gateway
      dockerfile: Dockerfile.dev
      target: development
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - NATS_SERVERS=nats://nats-server:4222
    volumes:
      - ../ms-nexus-gateway:/app
      - /app/node_modules
    depends_on:
      - nats-server
    networks:
      - microservices-network
    command: ["pnpm", "run", "start:dev"]
    profiles:
      - gateway # Solo se ejecuta si se especifica el perfil

  # Microservicio de Usuarios (si existe)
  ms-users:
    build:
      context: C:\\Users\\antho\\microservices\\ms-nexus-users
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3001
      - NATS_SERVERS=nats://nats-server:4222
    volumes:
      - ../ms-nexus-users:/app
      - /app/node_modules
    depends_on:
      - nats-server
    networks:
      - microservices-network
    command: ["pnpm", "run", "start:dev"]
    profiles:
      - users # Solo se ejecuta si se especifica el perfil

  # Microservicio de Integraci√≥n (actual)
  ms-integration:
    build:
      context: C:\\Users\\antho\\microservices\\ms-nexus-integration
      dockerfile: Dockerfile.dev
      target: development
    environment:
      - PORT=3002
      - NATS_SERVERS=nats://nats-server:4222
      # AWS Configuration
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      # Email Configuration
      - AWS_SES_SMTP_USERNAME=${AWS_SES_SMTP_USERNAME}
      - AWS_SES_SMTP_PASSWORD=${AWS_SES_SMTP_PASSWORD}
      - EMAIL_FROM=${EMAIL_FROM}
      # API Tokens
      - PA_TOKEN_PERUAPIS=${PA_TOKEN_PERUAPIS}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - nats-server
    networks:
      - microservices-network
    command: ["pnpm", "run", "start:dev"]

networks:
  microservices-network:
    driver: bridge
